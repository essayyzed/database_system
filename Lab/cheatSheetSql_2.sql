/****************Sorting Data***********************************/
        /********Order By*************************/

-- Select rows from a Table

SELECT *
FROM EMPLOYEE
ORDER BY EMP_HIRE_DATE DESC;  /***DESCENDING***/

SELECT *
FROM EMPLOYEE
ORDER BY EMP_HIRE_DATE ASC;  /**ASCENDING**/

SELECT * 
FROM EMPLOYEE
ORDER BY EMP_LNAME, EMP_FNAME; /**ORDERING BASED ON Last Name**/

SELECT * 
FROM EMPLOYEE
ORDER BY EMP_FNAME, EMP_LNAME;

SELECT TICKET_TYPE, PARK_CODE
FROM TICKET
WHERE (TICKET_PRICE > 15 AND TICKET_TYPE LIKE 'Child')
ORDER BY TICKET_NO DESC;

/*************DISTINCT***************/

SELECT DISTINCT(PARK_CODE)  /****USE TO AVOID DUPLICATION**/
FROM ATTRACTION;

/*****************************COUNT***************************/
SELECT COUNT(PARK_CODE)
FROM ATTRACTION;

SELECT COUNT(DISTINCT(PARK_CODE))
FROM ATTRACTION;

SELECT COUNT(DISTINCT(EMP_NUM)) AS "NUMBER OF EMPLOYEES"
FROM HOURS;

SELECT COUNT(*)
FROM ATTRACTION;

SELECT COUNT(ATTARCT_NAME)
FROM ATTRACTION;

/**********MIN & MAX******************/
SELECT MIN(TICKET_PRICE) AS "MAXIMUM TICKET PRICE", MAX(TICKET_PRICE) AS "MINIMUM TICKET"
FROM TICKET;

/***********AVG&SUM********************/
SELECT AVG(LINE_PRICE) AS "AVERAGE OF LINE PRICE", SUM(LINE_QTY) AS "AVERAGE OF LINE QUANTITY"
FROM SALES_LINE;

SELECT AVG(HOUR_RATE) AS "AVERAGE HOUR_RATE"
FROM HOURS;

SELECT AVG(ATTRACT_AGE) AS "AVERAGE ATTRACTION AGE"
    FROM ATTRACTION
    WHERE PARK_CODE = 'UK3452';

    /********************GROUP BY***********************/
SELECT PARK_CODE, MIN(TICKET_PRICE), MAX(TICKET_PRICE)
FROM TICKET
GROUP BY PARK_CODE;

SELECT PARK_CODE, AVG(TICKET_PRICE)
FROM TICKET
GROUP BY PARK_CODE
HAVING AVG(TICKET_PRICE) >= 24.99;

SELECT EMP_NUM, ATTRACT_NO, AVG(HOURS_PER_ATTRACT) AS "AVERAGE TIME"
FROM HOURS
GROUP BY EMP_NUM, ATTRACT_NO
HAVING AVG(HOURS_PER_ATTRACT) >= 5;

/******************EXCERCISE**********************/
/********************5.1**************************/
SELECT DISTINCT(EMP_NUM)
FROM HOURS;

/*******************5.2*************************/
SELECT EMP_NUM, SUM(HOUR_RATE) AS "HOUR WORKED"
FROM HOURS
GROUP BY EMP_NUM;

/****************5.3*****************/
SELECT ATTRACT_NO, MIN(HOUR_RATE) AS "MINIMUM HOURLY RATE", MAX(HOUR_RATE) AS "MAXIMUM HOURLY RATE"
FROM HOURS
GROUP BY ATTRACT_NO;

/******************5.4*************************/
SELECT TRANSACTION_NO, LINE_PRICE
FROM SALES_LINE
HAVING LINE_PRICE > 50;

/*********************5.5********************/
SELECT *
FROM SALES
ORDER BY SALE_DATE DESC;\
/*###########################################################################################*/
/***********************************JOIN******************************************************/
SELECT THEMEPARK.PARK_CODE,PARK_NAME,TICKET_NO,TICKET_TYPE,TICKET_PRICE
FROM THEMEPARK, TICKET
WHERE THEMEPARK.PARK_CODE = TICKET.PARK_CODE;

SELECT THEMEPARK.PARK_CODE, PARK_NAME, ATTRACT_NAME, ATTRACT_CAPACITY
FROM THEMEPARK, ATTRACTION
WHERE THEMEPARK.PARK_CODE = ATTRACTION.PARK_CODE;

/*******************ALIAS USED FOR JOINING********************************/
SELECT P.PARK_CODE,PARK_NAME,TICKET_NO,TICKET_TYPE,TICKET_PRICE
FROM THEMEPARK P, TICKET T
WHERE P.PARK_CODE = T.PARK_CODE;

/***********************CROSS JOIN*******************************/
/*****WORK AS CARTESIAN PRODUCT*************/
SELECT * 
FROM SALES CROSS JOIN SALES_LINE;

SELECT * 
FROM EMPLOYEE CROSS JOIN HOURS;

/**********************NATURAL JOIN*********************/
SELECT TRANSACTION_NO,SALE_DATE,LINE_NO,LINE_QTY,LINE_PRICE
FROM SALES NATURAL JOIN SALES_LINE;

SELECT EMP_FNAME, EMP_LNAME, ATTRACT_NO, DATE_WORKED
FROM HOURS NATURAL JOIN EMPLOYEE;

/*******************JOIN&USING***********************/
SELECT TRANSACTION_NO, SALE_DATE, LINE_NO, LINE_QTY
LINE_PRICE
FROM SALES JOIN SALES_LINE USING (TRANSACTION_NO);
